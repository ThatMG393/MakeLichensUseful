plugins {
	id 'fabric-loom' version '1.8-SNAPSHOT'
	id 'com.modrinth.minotaur' version '2.+'
}

version = project.mod_version
group = project.maven_group
base.archivesName = project.archives_base_name

java.sourceCompatibility = JavaVersion.VERSION_21
java.targetCompatibility = JavaVersion.VERSION_21

sourceSets.main.resources.srcDirs += "src/main/generated"

repositories {
	maven { url 'https://maven.fallenbreath.me/releases' }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabricapi_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}

	processResources.exclude('.cache/**')
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

fabricApi {
	configureDataGeneration()
}

modrinth {
	token = System.getenv("MODRINTH_TOKEN")
	projectId = "OAtFIH2A"

	versionName = "${project.base.archivesName.get().toUpperCase()} v${project.mod_version}"
	
	uploadFile = remapJar
	syncBodyFrom = rootProject.file("README.md").text

	debugMode = true

	dependencies { }
}

tasks.modrinth.dependsOn(tasks.modrinthSyncBody)
tasks.modrinth.dependsOn(tasks.runDatagen)
tasks.build.dependsOn(tasks.runDatagen)
